
package ChartGraphic2;

import java.awt.BorderLayout;
import java.awt.Color;
import java.util.Locale;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;


public class ChartApp extends javax.swing.JFrame {

    public double[] vericekme(){
         String str = data_alani.getText();
        int uzunluk=1;
        
         for (int i = 0; i <= str.length()-1; i++) {
            if (str.charAt(i) == ',') {
                uzunluk++;
            }
        }
         double[] data  = new double[uzunluk];

        String temp = "";

        int i = 0;
        for (int j = 0; j <=str.length()-1; j++) {
            if (str.charAt(j) != ',') {
                temp += str.charAt(j);
                if (j == str.length()-1) {
                    data[i] = Double.parseDouble(temp);
                    i++;
                    temp = "";
                }
            } else {
                data[i] = Double.parseDouble(temp);
                i++;
                temp = "";
            }
            
            }
        return data;
    }
    
    public ChartApp() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        data_alani = new javax.swing.JTextArea();
        chart_btn = new javax.swing.JButton();
        line_btn = new javax.swing.JButton();
        pie_btn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CHART GRAPHİC APP");

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Lütfen verilerinizi giriniz :");

        data_alani.setColumns(20);
        data_alani.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        data_alani.setRows(5);
        data_alani.setToolTipText("");
        data_alani.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        jScrollPane1.setViewportView(data_alani);

        chart_btn.setText("Sütun Grafiği");
        chart_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chart_btnActionPerformed(evt);
            }
        });

        line_btn.setText("Çizgi Grafiği");
        line_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                line_btnActionPerformed(evt);
            }
        });

        pie_btn.setText("Pasta Grafiği");
        pie_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pie_btnActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("Lütfen verilerinizi aralarına virgül koyarak giriniz.");

        jLabel3.setForeground(new java.awt.Color(255, 51, 51));
        jLabel3.setText("Ondalık sayılar için nokta kullanınız.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chart_btn)
                        .addGap(18, 18, 18)
                        .addComponent(pie_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(line_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(line_btn)
                    .addComponent(pie_btn)
                    .addComponent(chart_btn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chart_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chart_btnActionPerformed

        
        DefaultCategoryDataset chartDataset = new DefaultCategoryDataset();
        for(int j=0; j<vericekme().length; j++){
        
        chartDataset.setValue(vericekme()[j], "", "Veri "+(j+1));
        

        }
        JFreeChart chart = ChartFactory.createBarChart3D("Sütun Grafiği", "Xaxis", "Yaxis", chartDataset, PlotOrientation.VERTICAL, false,false, false);
        CategoryPlot catPlot = chart.getCategoryPlot();
        catPlot.setRangeGridlinePaint(Color.ORANGE);
        chart.setBackgroundPaint(Color.GREEN);
        
        
        ChartFrame frame = new ChartFrame("Sütun Grafiği",chart);
        frame.setSize(450,500);
        frame.setVisible(true);
        
        
    }//GEN-LAST:event_chart_btnActionPerformed

    private void pie_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pie_btnActionPerformed
       DefaultPieDataset pieDataset = new DefaultPieDataset();
       for(int j=0; j<vericekme().length;j++){
            pieDataset.setValue("Veri "+(j+1), vericekme()[j]);
       }
      
           JFreeChart chart = ChartFactory.createPieChart3D("Pasta Grafiği", pieDataset, true, true, true);
           PiePlot3D p =(PiePlot3D) chart.getPlot();
           chart.setBackgroundPaint(Color.cyan);
           ChartFrame frame = new ChartFrame("Pasta Grafiği",chart);
           frame.setVisible(true);
           frame.setSize(450,500);
    }//GEN-LAST:event_pie_btnActionPerformed

    private void line_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_line_btnActionPerformed
        DefaultCategoryDataset chartDataset = new DefaultCategoryDataset();
        for(int j=0; j<vericekme().length; j++){
            chartDataset.setValue(vericekme()[j], "", ""+(j+1));
        }
        JFreeChart chart = ChartFactory.createLineChart3D("Çizgi Grafiği", "Xaxis", "Yaxis", chartDataset, PlotOrientation.VERTICAL, false,false, false);
        CategoryPlot catPlot = chart.getCategoryPlot();
        chart.setBackgroundPaint(Color.ORANGE);
        
        catPlot.setRangeGridlinePaint(Color.ORANGE);
        ChartFrame frame = new ChartFrame("Çizgi Grafiği",chart);
        frame.setSize(450,500);
        frame.setVisible(true);
    }//GEN-LAST:event_line_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChartApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChartApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChartApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChartApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChartApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chart_btn;
    private javax.swing.JTextArea data_alani;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton line_btn;
    private javax.swing.JButton pie_btn;
    // End of variables declaration//GEN-END:variables
}
